[env]
LIBRARY_EXTENSION = { source = "${CARGO_MAKE_RUST_TARGET_OS}", default_value = "unknown", mapping = { "linux" = "so", "macos" = "dylib", "windows" = "dll", "openbsd" = "so" } }
BIN_EXTENSION = { source = "${CARGO_MAKE_RUST_TARGET_OS}", default_value = "unknown", mapping = { "linux" = "", "macos" = "???", "windows" = ".exe", "openbsd" = "???" } }

[config]
default_to_workspace = false

[env.development]
BUILD_PROFILE_TEXT = "dev"
DEBUG_OR_RELEASE_TEXT = "debug"

[env.production]
BUILD_PROFILE_TEXT = "release"
DEBUG_OR_RELEASE_TEXT = "release"

[tasks.echo]
script_runner = "@shell"
script = ['''
echo COMMON: ${COMMON}
echo PROFILE_NAME: ${PROFILE_NAME}
echo IS_DEV: ${IS_DEV}
echo IS_PROD: ${IS_PROD}
''']

[tasks.build]
dependencies = ["build_match_copy_artifacts"]
command = "cargo"
args = ["build", "--profile", "${BUILD_PROFILE_TEXT}"]

[tasks.client]
dependencies = ["build_client"]
command = "target/${DEBUG_OR_RELEASE_TEXT}/wrts${BIN_EXTENSION}"

[tasks.build_client]
command = "cargo"
args = ["build", "-p", "wrts", "--profile", "${BUILD_PROFILE_TEXT}"]

[tasks.server]
dependencies = ["build_server"]
command = "target/${DEBUG_OR_RELEASE_TEXT}/wrts_lobby${BIN_EXTENSION}"
args = ["lobby"]

[tasks.build_server]
command = "cargo"
args = ["build", "-p", "wrts_lobby", "--profile", "${BUILD_PROFILE_TEXT}"]
