//! A closed form solution for the time of intersection in the bullet problem (meaning: no newton's method required!!)
//!
//! Code generated from the wolfram alpha output of:
//! https://www.wolframalpha.com/input?i2d=true&i=Solve%5C%2891%29%5C%28123%29Sqrt%5BPower%5B%5C%2840%29Subscript%5Bp%2Cx%5D%2BSubscript%5Bv%2Cx%5Dt%5C%2841%29%2C2%5D%2BPower%5B%5C%2840%29Subscript%5Bp%2Cy%5D%2BSubscript%5Bv%2Cy%5Dt%5C%2841%29%2C2%5D%5D%3DSubscript%5Bs%2Cp%5DtSqrt%5B1-Power%5B%5C%2840%29Subscript%5Bg%2C0%5DDivide%5Bt%2C2Subscript%5Bs%2Cp%5D%5D%5C%2841%29%2C2%5D%5D%5C%28125%29%5C%2844%29%5C%28123%29t%5C%28125%29%5C%2893%29

use num::complex::*;
/// "handwritten"
///
/// In case this is too slow, fast floating point ops would provide fairly significant speed up
#[allow(non_snake_case, unused)]
pub fn GENERATED_CODE(
    g: f64,
    p_x: f64,
    p_y: f64,
    muzzle_vel: f64,
    v_x: f64,
    v_y: f64,
) -> Complex<f64> {
    (Complex::sqrt(
        ((Complex::new(8_f64, 0.0))
            * ((muzzle_vel).powc(Complex::new(2_f64, 0.0))
                - (v_x).powc(Complex::new(2_f64, 0.0))
                - (v_y).powc(Complex::new(2_f64, 0.0))))
            / ((Complex::new(3_f64, 0.0)) * (g).powc(Complex::new(2_f64, 0.0)))
            + ((Complex::new(2_f64, 0.0))
                .powc((Complex::new(1_f64, 0.0)) / (Complex::new(3_f64, 0.0)))
                * ((Complex::new(48_f64, 0.0))
                    * (g).powc(Complex::new(2_f64, 0.0))
                    * ((p_x).powc(Complex::new(2_f64, 0.0))
                        + (p_y).powc(Complex::new(2_f64, 0.0)))
                    + (Complex::new(16_f64, 0.0))
                        * ((muzzle_vel).powc(Complex::new(2_f64, 0.0))
                            - (v_x).powc(Complex::new(2_f64, 0.0))
                            - (v_y).powc(Complex::new(2_f64, 0.0)))
                        .powc(Complex::new(2_f64, 0.0))))
                / ((Complex::new(3_f64, 0.0))
                    * (g).powc(Complex::new(2_f64, 0.0))
                    * ((Complex::new(1728_f64, 0.0))
                        * (g).powc(Complex::new(2_f64, 0.0))
                        * ((p_x) * (v_x) + (p_y) * (v_y)).powc(Complex::new(2_f64, 0.0))
                        + (Complex::new(1152_f64, 0.0))
                            * (g).powc(Complex::new(2_f64, 0.0))
                            * ((p_x).powc(Complex::new(2_f64, 0.0))
                                + (p_y).powc(Complex::new(2_f64, 0.0)))
                            * ((muzzle_vel).powc(Complex::new(2_f64, 0.0))
                                - (v_x).powc(Complex::new(2_f64, 0.0))
                                - (v_y).powc(Complex::new(2_f64, 0.0)))
                        - (Complex::new(128_f64, 0.0))
                            * ((muzzle_vel).powc(Complex::new(2_f64, 0.0))
                                - (v_x).powc(Complex::new(2_f64, 0.0))
                                - (v_y).powc(Complex::new(2_f64, 0.0)))
                            .powc(Complex::new(3_f64, 0.0))
                        + (Complex::sqrt(
                            (Complex::new(-4_f64, 0.0))
                                * ((Complex::new(48_f64, 0.0))
                                    * (g).powc(Complex::new(2_f64, 0.0))
                                    * ((p_x).powc(Complex::new(2_f64, 0.0))
                                        + (p_y).powc(Complex::new(2_f64, 0.0)))
                                    + (Complex::new(16_f64, 0.0))
                                        * ((muzzle_vel).powc(Complex::new(2_f64, 0.0))
                                            - (v_x).powc(Complex::new(2_f64, 0.0))
                                            - (v_y).powc(Complex::new(2_f64, 0.0)))
                                        .powc(Complex::new(2_f64, 0.0)))
                                .powc(Complex::new(3_f64, 0.0))
                                + ((Complex::new(1728_f64, 0.0))
                                    * (g).powc(Complex::new(2_f64, 0.0))
                                    * ((p_x) * (v_x) + (p_y) * (v_y))
                                        .powc(Complex::new(2_f64, 0.0))
                                    + (Complex::new(1152_f64, 0.0))
                                        * (g).powc(Complex::new(2_f64, 0.0))
                                        * ((p_x).powc(Complex::new(2_f64, 0.0))
                                            + (p_y).powc(Complex::new(2_f64, 0.0)))
                                        * ((muzzle_vel).powc(Complex::new(2_f64, 0.0))
                                            - (v_x).powc(Complex::new(2_f64, 0.0))
                                            - (v_y).powc(Complex::new(2_f64, 0.0)))
                                    - (Complex::new(128_f64, 0.0))
                                        * ((muzzle_vel).powc(Complex::new(2_f64, 0.0))
                                            - (v_x).powc(Complex::new(2_f64, 0.0))
                                            - (v_y).powc(Complex::new(2_f64, 0.0)))
                                        .powc(Complex::new(3_f64, 0.0)))
                                .powc(Complex::new(2_f64, 0.0)),
                        )))
                    .powc((Complex::new(1_f64, 0.0)) / (Complex::new(3_f64, 0.0))))
            + ((Complex::new(1728_f64, 0.0))
                * (g).powc(Complex::new(2_f64, 0.0))
                * ((p_x) * (v_x) + (p_y) * (v_y)).powc(Complex::new(2_f64, 0.0))
                + (Complex::new(1152_f64, 0.0))
                    * (g).powc(Complex::new(2_f64, 0.0))
                    * ((p_x).powc(Complex::new(2_f64, 0.0))
                        + (p_y).powc(Complex::new(2_f64, 0.0)))
                    * ((muzzle_vel).powc(Complex::new(2_f64, 0.0))
                        - (v_x).powc(Complex::new(2_f64, 0.0))
                        - (v_y).powc(Complex::new(2_f64, 0.0)))
                - (Complex::new(128_f64, 0.0))
                    * ((muzzle_vel).powc(Complex::new(2_f64, 0.0))
                        - (v_x).powc(Complex::new(2_f64, 0.0))
                        - (v_y).powc(Complex::new(2_f64, 0.0)))
                    .powc(Complex::new(3_f64, 0.0))
                + (Complex::sqrt(
                    (Complex::new(-4_f64, 0.0))
                        * ((Complex::new(48_f64, 0.0))
                            * (g).powc(Complex::new(2_f64, 0.0))
                            * ((p_x).powc(Complex::new(2_f64, 0.0))
                                + (p_y).powc(Complex::new(2_f64, 0.0)))
                            + (Complex::new(16_f64, 0.0))
                                * ((muzzle_vel).powc(Complex::new(2_f64, 0.0))
                                    - (v_x).powc(Complex::new(2_f64, 0.0))
                                    - (v_y).powc(Complex::new(2_f64, 0.0)))
                                .powc(Complex::new(2_f64, 0.0)))
                        .powc(Complex::new(3_f64, 0.0))
                        + ((Complex::new(1728_f64, 0.0))
                            * (g).powc(Complex::new(2_f64, 0.0))
                            * ((p_x) * (v_x) + (p_y) * (v_y)).powc(Complex::new(2_f64, 0.0))
                            + (Complex::new(1152_f64, 0.0))
                                * (g).powc(Complex::new(2_f64, 0.0))
                                * ((p_x).powc(Complex::new(2_f64, 0.0))
                                    + (p_y).powc(Complex::new(2_f64, 0.0)))
                                * ((muzzle_vel).powc(Complex::new(2_f64, 0.0))
                                    - (v_x).powc(Complex::new(2_f64, 0.0))
                                    - (v_y).powc(Complex::new(2_f64, 0.0)))
                            - (Complex::new(128_f64, 0.0))
                                * ((muzzle_vel).powc(Complex::new(2_f64, 0.0))
                                    - (v_x).powc(Complex::new(2_f64, 0.0))
                                    - (v_y).powc(Complex::new(2_f64, 0.0)))
                                .powc(Complex::new(3_f64, 0.0)))
                        .powc(Complex::new(2_f64, 0.0)),
                )))
            .powc((Complex::new(1_f64, 0.0)) / (Complex::new(3_f64, 0.0)))
                / ((Complex::new(3_f64, 0.0))
                    * (Complex::new(2_f64, 0.0))
                        .powc((Complex::new(1_f64, 0.0)) / (Complex::new(3_f64, 0.0)))
                    * (g).powc(Complex::new(2_f64, 0.0))),
    )) / (Complex::new(2_f64, 0.0))
        - (Complex::sqrt(
            ((Complex::new(16_f64, 0.0))
                * ((muzzle_vel).powc(Complex::new(2_f64, 0.0))
                    - (v_x).powc(Complex::new(2_f64, 0.0))
                    - (v_y).powc(Complex::new(2_f64, 0.0))))
                / ((Complex::new(3_f64, 0.0)) * (g).powc(Complex::new(2_f64, 0.0)))
                - ((Complex::new(2_f64, 0.0))
                    .powc((Complex::new(1_f64, 0.0)) / (Complex::new(3_f64, 0.0)))
                    * ((Complex::new(48_f64, 0.0))
                        * (g).powc(Complex::new(2_f64, 0.0))
                        * ((p_x).powc(Complex::new(2_f64, 0.0))
                            + (p_y).powc(Complex::new(2_f64, 0.0)))
                        + (Complex::new(16_f64, 0.0))
                            * ((muzzle_vel).powc(Complex::new(2_f64, 0.0))
                                - (v_x).powc(Complex::new(2_f64, 0.0))
                                - (v_y).powc(Complex::new(2_f64, 0.0)))
                            .powc(Complex::new(2_f64, 0.0))))
                    / ((Complex::new(3_f64, 0.0))
                        * (g).powc(Complex::new(2_f64, 0.0))
                        * ((Complex::new(1728_f64, 0.0))
                            * (g).powc(Complex::new(2_f64, 0.0))
                            * ((p_x) * (v_x) + (p_y) * (v_y)).powc(Complex::new(2_f64, 0.0))
                            + (Complex::new(1152_f64, 0.0))
                                * (g).powc(Complex::new(2_f64, 0.0))
                                * ((p_x).powc(Complex::new(2_f64, 0.0))
                                    + (p_y).powc(Complex::new(2_f64, 0.0)))
                                * ((muzzle_vel).powc(Complex::new(2_f64, 0.0))
                                    - (v_x).powc(Complex::new(2_f64, 0.0))
                                    - (v_y).powc(Complex::new(2_f64, 0.0)))
                            - (Complex::new(128_f64, 0.0))
                                * ((muzzle_vel).powc(Complex::new(2_f64, 0.0))
                                    - (v_x).powc(Complex::new(2_f64, 0.0))
                                    - (v_y).powc(Complex::new(2_f64, 0.0)))
                                .powc(Complex::new(3_f64, 0.0))
                            + (Complex::sqrt(
                                (Complex::new(-4_f64, 0.0))
                                    * ((Complex::new(48_f64, 0.0))
                                        * (g).powc(Complex::new(2_f64, 0.0))
                                        * ((p_x).powc(Complex::new(2_f64, 0.0))
                                            + (p_y).powc(Complex::new(2_f64, 0.0)))
                                        + (Complex::new(16_f64, 0.0))
                                            * ((muzzle_vel).powc(Complex::new(2_f64, 0.0))
                                                - (v_x).powc(Complex::new(2_f64, 0.0))
                                                - (v_y).powc(Complex::new(2_f64, 0.0)))
                                            .powc(Complex::new(2_f64, 0.0)))
                                    .powc(Complex::new(3_f64, 0.0))
                                    + ((Complex::new(1728_f64, 0.0))
                                        * (g).powc(Complex::new(2_f64, 0.0))
                                        * ((p_x) * (v_x) + (p_y) * (v_y))
                                            .powc(Complex::new(2_f64, 0.0))
                                        + (Complex::new(1152_f64, 0.0))
                                            * (g).powc(Complex::new(2_f64, 0.0))
                                            * ((p_x).powc(Complex::new(2_f64, 0.0))
                                                + (p_y).powc(Complex::new(2_f64, 0.0)))
                                            * ((muzzle_vel).powc(Complex::new(2_f64, 0.0))
                                                - (v_x).powc(Complex::new(2_f64, 0.0))
                                                - (v_y).powc(Complex::new(2_f64, 0.0)))
                                        - (Complex::new(128_f64, 0.0))
                                            * ((muzzle_vel).powc(Complex::new(2_f64, 0.0))
                                                - (v_x).powc(Complex::new(2_f64, 0.0))
                                                - (v_y).powc(Complex::new(2_f64, 0.0)))
                                            .powc(Complex::new(3_f64, 0.0)))
                                    .powc(Complex::new(2_f64, 0.0)),
                            )))
                        .powc((Complex::new(1_f64, 0.0)) / (Complex::new(3_f64, 0.0))))
                - ((Complex::new(1728_f64, 0.0))
                    * (g).powc(Complex::new(2_f64, 0.0))
                    * ((p_x) * (v_x) + (p_y) * (v_y)).powc(Complex::new(2_f64, 0.0))
                    + (Complex::new(1152_f64, 0.0))
                        * (g).powc(Complex::new(2_f64, 0.0))
                        * ((p_x).powc(Complex::new(2_f64, 0.0))
                            + (p_y).powc(Complex::new(2_f64, 0.0)))
                        * ((muzzle_vel).powc(Complex::new(2_f64, 0.0))
                            - (v_x).powc(Complex::new(2_f64, 0.0))
                            - (v_y).powc(Complex::new(2_f64, 0.0)))
                    - (Complex::new(128_f64, 0.0))
                        * ((muzzle_vel).powc(Complex::new(2_f64, 0.0))
                            - (v_x).powc(Complex::new(2_f64, 0.0))
                            - (v_y).powc(Complex::new(2_f64, 0.0)))
                        .powc(Complex::new(3_f64, 0.0))
                    + (Complex::sqrt(
                        (Complex::new(-4_f64, 0.0))
                            * ((Complex::new(48_f64, 0.0))
                                * (g).powc(Complex::new(2_f64, 0.0))
                                * ((p_x).powc(Complex::new(2_f64, 0.0))
                                    + (p_y).powc(Complex::new(2_f64, 0.0)))
                                + (Complex::new(16_f64, 0.0))
                                    * ((muzzle_vel).powc(Complex::new(2_f64, 0.0))
                                        - (v_x).powc(Complex::new(2_f64, 0.0))
                                        - (v_y).powc(Complex::new(2_f64, 0.0)))
                                    .powc(Complex::new(2_f64, 0.0)))
                            .powc(Complex::new(3_f64, 0.0))
                            + ((Complex::new(1728_f64, 0.0))
                                * (g).powc(Complex::new(2_f64, 0.0))
                                * ((p_x) * (v_x) + (p_y) * (v_y)).powc(Complex::new(2_f64, 0.0))
                                + (Complex::new(1152_f64, 0.0))
                                    * (g).powc(Complex::new(2_f64, 0.0))
                                    * ((p_x).powc(Complex::new(2_f64, 0.0))
                                        + (p_y).powc(Complex::new(2_f64, 0.0)))
                                    * ((muzzle_vel).powc(Complex::new(2_f64, 0.0))
                                        - (v_x).powc(Complex::new(2_f64, 0.0))
                                        - (v_y).powc(Complex::new(2_f64, 0.0)))
                                - (Complex::new(128_f64, 0.0))
                                    * ((muzzle_vel).powc(Complex::new(2_f64, 0.0))
                                        - (v_x).powc(Complex::new(2_f64, 0.0))
                                        - (v_y).powc(Complex::new(2_f64, 0.0)))
                                    .powc(Complex::new(3_f64, 0.0)))
                            .powc(Complex::new(2_f64, 0.0)),
                    )))
                .powc((Complex::new(1_f64, 0.0)) / (Complex::new(3_f64, 0.0)))
                    / ((Complex::new(3_f64, 0.0))
                        * (Complex::new(2_f64, 0.0))
                            .powc((Complex::new(1_f64, 0.0)) / (Complex::new(3_f64, 0.0)))
                        * (g).powc(Complex::new(2_f64, 0.0)))
                - ((Complex::new(16_f64, 0.0)) * ((p_x) * (v_x) + (p_y) * (v_y)))
                    / ((g).powc(Complex::new(2_f64, 0.0))
                        * (Complex::sqrt(
                            ((Complex::new(8_f64, 0.0))
                                * ((muzzle_vel).powc(Complex::new(2_f64, 0.0))
                                    - (v_x).powc(Complex::new(2_f64, 0.0))
                                    - (v_y).powc(Complex::new(2_f64, 0.0))))
                                / ((Complex::new(3_f64, 0.0)) * (g).powc(Complex::new(2_f64, 0.0)))
                                + ((Complex::new(2_f64, 0.0))
                                    .powc((Complex::new(1_f64, 0.0)) / (Complex::new(3_f64, 0.0)))
                                    * ((Complex::new(48_f64, 0.0))
                                        * (g).powc(Complex::new(2_f64, 0.0))
                                        * ((p_x).powc(Complex::new(2_f64, 0.0))
                                            + (p_y).powc(Complex::new(2_f64, 0.0)))
                                        + (Complex::new(16_f64, 0.0))
                                            * ((muzzle_vel).powc(Complex::new(2_f64, 0.0))
                                                - (v_x).powc(Complex::new(2_f64, 0.0))
                                                - (v_y).powc(Complex::new(2_f64, 0.0)))
                                            .powc(Complex::new(2_f64, 0.0))))
                                    / ((Complex::new(3_f64, 0.0))
                                        * (g).powc(Complex::new(2_f64, 0.0))
                                        * ((Complex::new(1728_f64, 0.0))
                                            * (g).powc(Complex::new(2_f64, 0.0))
                                            * ((p_x) * (v_x) + (p_y) * (v_y))
                                                .powc(Complex::new(2_f64, 0.0))
                                            + (Complex::new(1152_f64, 0.0))
                                                * (g).powc(Complex::new(2_f64, 0.0))
                                                * ((p_x).powc(Complex::new(2_f64, 0.0))
                                                    + (p_y).powc(Complex::new(2_f64, 0.0)))
                                                * ((muzzle_vel).powc(Complex::new(2_f64, 0.0))
                                                    - (v_x).powc(Complex::new(2_f64, 0.0))
                                                    - (v_y).powc(Complex::new(2_f64, 0.0)))
                                            - (Complex::new(128_f64, 0.0))
                                                * ((muzzle_vel).powc(Complex::new(2_f64, 0.0))
                                                    - (v_x).powc(Complex::new(2_f64, 0.0))
                                                    - (v_y).powc(Complex::new(2_f64, 0.0)))
                                                .powc(Complex::new(3_f64, 0.0))
                                            + (Complex::sqrt(
                                                (Complex::new(-4_f64, 0.0))
                                                    * ((Complex::new(48_f64, 0.0))
                                                        * (g).powc(Complex::new(2_f64, 0.0))
                                                        * ((p_x).powc(Complex::new(2_f64, 0.0))
                                                            + (p_y)
                                                                .powc(Complex::new(2_f64, 0.0)))
                                                        + (Complex::new(16_f64, 0.0))
                                                            * ((muzzle_vel)
                                                                .powc(Complex::new(2_f64, 0.0))
                                                                - (v_x).powc(Complex::new(
                                                                    2_f64, 0.0,
                                                                ))
                                                                - (v_y).powc(Complex::new(
                                                                    2_f64, 0.0,
                                                                )))
                                                            .powc(Complex::new(2_f64, 0.0)))
                                                    .powc(Complex::new(3_f64, 0.0))
                                                    + ((Complex::new(1728_f64, 0.0))
                                                        * (g).powc(Complex::new(2_f64, 0.0))
                                                        * ((p_x) * (v_x) + (p_y) * (v_y))
                                                            .powc(Complex::new(2_f64, 0.0))
                                                        + (Complex::new(1152_f64, 0.0))
                                                            * (g).powc(Complex::new(2_f64, 0.0))
                                                            * ((p_x)
                                                                .powc(Complex::new(2_f64, 0.0))
                                                                + (p_y).powc(Complex::new(
                                                                    2_f64, 0.0,
                                                                )))
                                                            * ((muzzle_vel)
                                                                .powc(Complex::new(2_f64, 0.0))
                                                                - (v_x).powc(Complex::new(
                                                                    2_f64, 0.0,
                                                                ))
                                                                - (v_y).powc(Complex::new(
                                                                    2_f64, 0.0,
                                                                )))
                                                        - (Complex::new(128_f64, 0.0))
                                                            * ((muzzle_vel)
                                                                .powc(Complex::new(2_f64, 0.0))
                                                                - (v_x).powc(Complex::new(
                                                                    2_f64, 0.0,
                                                                ))
                                                                - (v_y).powc(Complex::new(
                                                                    2_f64, 0.0,
                                                                )))
                                                            .powc(Complex::new(3_f64, 0.0)))
                                                    .powc(Complex::new(2_f64, 0.0)),
                                            )))
                                        .powc(
                                            (Complex::new(1_f64, 0.0)) / (Complex::new(3_f64, 0.0)),
                                        ))
                                + ((Complex::new(1728_f64, 0.0))
                                    * (g).powc(Complex::new(2_f64, 0.0))
                                    * ((p_x) * (v_x) + (p_y) * (v_y))
                                        .powc(Complex::new(2_f64, 0.0))
                                    + (Complex::new(1152_f64, 0.0))
                                        * (g).powc(Complex::new(2_f64, 0.0))
                                        * ((p_x).powc(Complex::new(2_f64, 0.0))
                                            + (p_y).powc(Complex::new(2_f64, 0.0)))
                                        * ((muzzle_vel).powc(Complex::new(2_f64, 0.0))
                                            - (v_x).powc(Complex::new(2_f64, 0.0))
                                            - (v_y).powc(Complex::new(2_f64, 0.0)))
                                    - (Complex::new(128_f64, 0.0))
                                        * ((muzzle_vel).powc(Complex::new(2_f64, 0.0))
                                            - (v_x).powc(Complex::new(2_f64, 0.0))
                                            - (v_y).powc(Complex::new(2_f64, 0.0)))
                                        .powc(Complex::new(3_f64, 0.0))
                                    + (Complex::sqrt(
                                        (Complex::new(-4_f64, 0.0))
                                            * ((Complex::new(48_f64, 0.0))
                                                * (g).powc(Complex::new(2_f64, 0.0))
                                                * ((p_x).powc(Complex::new(2_f64, 0.0))
                                                    + (p_y).powc(Complex::new(2_f64, 0.0)))
                                                + (Complex::new(16_f64, 0.0))
                                                    * ((muzzle_vel)
                                                        .powc(Complex::new(2_f64, 0.0))
                                                        - (v_x).powc(Complex::new(2_f64, 0.0))
                                                        - (v_y).powc(Complex::new(2_f64, 0.0)))
                                                    .powc(Complex::new(2_f64, 0.0)))
                                            .powc(Complex::new(3_f64, 0.0))
                                            + ((Complex::new(1728_f64, 0.0))
                                                * (g).powc(Complex::new(2_f64, 0.0))
                                                * ((p_x) * (v_x) + (p_y) * (v_y))
                                                    .powc(Complex::new(2_f64, 0.0))
                                                + (Complex::new(1152_f64, 0.0))
                                                    * (g).powc(Complex::new(2_f64, 0.0))
                                                    * ((p_x).powc(Complex::new(2_f64, 0.0))
                                                        + (p_y).powc(Complex::new(2_f64, 0.0)))
                                                    * ((muzzle_vel)
                                                        .powc(Complex::new(2_f64, 0.0))
                                                        - (v_x).powc(Complex::new(2_f64, 0.0))
                                                        - (v_y).powc(Complex::new(2_f64, 0.0)))
                                                - (Complex::new(128_f64, 0.0))
                                                    * ((muzzle_vel)
                                                        .powc(Complex::new(2_f64, 0.0))
                                                        - (v_x).powc(Complex::new(2_f64, 0.0))
                                                        - (v_y).powc(Complex::new(2_f64, 0.0)))
                                                    .powc(Complex::new(3_f64, 0.0)))
                                            .powc(Complex::new(2_f64, 0.0)),
                                    )))
                                .powc((Complex::new(1_f64, 0.0)) / (Complex::new(3_f64, 0.0)))
                                    / ((Complex::new(3_f64, 0.0))
                                        * (Complex::new(2_f64, 0.0)).powc(
                                            (Complex::new(1_f64, 0.0)) / (Complex::new(3_f64, 0.0)),
                                        )
                                        * (g).powc(Complex::new(2_f64, 0.0))),
                        ))),
        )) / (Complex::new(2_f64, 0.0))
}
